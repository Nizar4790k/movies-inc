{"version":3,"sources":["config.js","components/Session/Session.js","components/Auth/Auth.js","components/Movies/Movie/Movie.js","components/Movies/MovieList/MovieList.js","components/Home/Home.js","components/Movies/MovieDetails/MoviesDetails.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["development","endpoint","pkg","proxy","api_key","production","window","location","hostname","Session","config","params","URLSearchParams","search","useState","get","approved","denied","request_token","useEffect","a","fetch","method","headers","body","JSON","stringify","response","json","result","localStorage","setItem","session_id","console","log","fetchSessionId","to","alert","removeItem","Auth","token","href","authenticate","Movie","movie","history","useHistory","genres","setGenres","id","toString","fetchMoviesDetails","className","title","overview","vote_average","release_date","map","genre","i","name","style","onClick","push","src","poster_path","alt","MovieList","movies","setMovies","predicateBy","prop","b","page","results","sort","fetchMovies","Home","loadUser","isSignedIn","user","getItem","sessionId","fetchUser","MovieDetails","setMovie","Number","idx","rating","setRating","urls","Promise","all","url","forEach","getData","rateMovie","newRating","value","catch","err","Date","getFullYear","count","onChange","size","isHalf","emptyIcon","halfIcon","fullIcon","activeColor","NavBar","username","onSignOut","type","data-toggle","data-target","class","App","setUser","setSignedIn","path","component","exact","render","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a7427ca.chunk.js","sourcesContent":["import pkg from '../package.json';\n\n\nexport default {\n    development:{\n        endpoint:pkg.proxy,\n        api_key:pkg.api_key\n    },\n    production: {\n        endpoint:window.location.hostname,\n        api_key:pkg.api_key\n    }\n}","\nimport React, { useEffect, useState } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport config from '../../config';\n\nconst Session = ()=>{\n    const api_key = config[process.env.NODE_ENV].api_key;\n    const params = new URLSearchParams(window.location.search);\n    \n \n   \n    \n    const [approved,setApproved] = useState(params.get(\"approved\"));\n    const [denied,setDenied] = useState(params.get('denied'))\n    const [request_token,setRequestToken] = useState(params.get('request_token'))\n   \n\n\n  \n\n\n  useEffect(async ()=>{\n\n    async function fetchSessionId(){\n        const response = await fetch(`https://api.themoviedb.org/3/authentication/session/new?api_key=${api_key}`,{\n            method:'post',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                request_token:request_token\n            })\n        })\n       \n        const result = await response.json();\n        \n        localStorage.setItem('session_id',result.session_id);\n        console.log(result.session_id);\n\n\n        \n\n        \n\n    }\n\n   \n\n    \n   fetchSessionId()\n    \n\n\n  },[])  \n\n\n  \n\n   \nif(approved){\n\n   return <Redirect to=\"/Home\"></Redirect>\n    \n\n}else if(denied){\n    alert(\"You need to approve permissions to use the app\");\n    localStorage.removeItem('session_id')\n\n    return <Redirect to=\"/\"></Redirect>\n}else{\n    alert(\"An error ocurred!\")\n    return <Redirect to=\"/Auth\"></Redirect>\n}\n\n\n    \n}\n\nexport default Session;","import config from '../../config';\nimport {useEffect} from \"react\";\nconst Auth =()=>{\n\n      \n       const api_key = config[process.env.NODE_ENV].api_key;\n       \n        \n        async function authenticate(){\n      \n           \n          const  response = await fetch(`https://api.themoviedb.org/3/authentication/token/new?api_key=${api_key}`);\n          const result = await response.json();\n          \n          const token = result.request_token;\n      \n          \n      \n          window.location.href =`https://www.themoviedb.org/authenticate/${token}?redirect_to=http://localhost:3000/Session`;\n        \n        \n        }\n       \n        \n        useEffect( ()=>{\n      \n           \n          authenticate();\n          \n        \n        },[]);\n      \n        return(null)\n\n}\n\nexport default Auth;","import React, { useEffect,useState } from 'react';\nimport {  useHistory } from \"react-router-dom\";\nimport config from \"../../../config\";\nimport \"./Movie.css\";\n\n\nconst Movie = ({movie}) => {\n\n    const history = useHistory();\n    const [genres,setGenres] = useState([])\n\n\n    const goToDetails = () => {\n        history.push(`Movies/${movie.id}`);\n      };\n    \n\n      useEffect(()=>{\n        \n        const fetchMoviesDetails = async () =>{\n          const api_key = config[process.env.NODE_ENV].api_key;\n          const response =  await fetch(`https://api.themoviedb.org/3/movie/ ${movie.id.toString()}?api_key=${api_key}&language=en-US`);\n          const result = await response.json();\n          setGenres(result.genres);\n          \n          \n          \n\n      }\n\n      fetchMoviesDetails();\n\n      },[])\n    \n/*\n    return (\n        \n        <div className=\"card horizontal\" >\n            <img src={\"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\"+movie.poster_path}  className=\"card-img-top\" alt=\"...\"></img>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{movie.title}</h5>\n                <p className=\"card-text\">{movie.overview}.</p>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\"><b>Release Date: </b>{movie.release_date}</li>\n                <li className=\"list-group-item\"><b>Average Vote: </b>{movie.vote_average}</li>\n                <li className=\"list-group-item\"><button className=\"btn btn-info\" style={{\"color\":\"white\"}} onClick= {()=>{goToDetails()}} >View details</button></li>\n                \n            </ul>\n            \n        </div>\n        \n    );\n    */\n\n    return(\n        <div className=\"card\">\n        <div className=\"row \">\n          <div className=\"col-md-7 px-3\">\n            <div className=\"card-block px-6\">\n              <h4 className=\"card-title\">{movie.title}</h4>\n              <p className=\"card-text\">\n              {movie.overview}\n              </p>\n              <b>Average Vote: </b>{movie.vote_average}\n              <br/>\n              <p className=\"card-text\"><b>Release Date: </b>{movie.release_date}</p>\n              \n              <p className=\"card-text\"><b>Genres:</b></p>\n              <ul>\n                        \n              {genres.map((genre, i) => {\n                            return (<li key={i}>{genre.name}</li>)\n                        })}\n\n\n                    </ul>\n              \n             \n              <button className=\"btn btn-info\" style={{\"color\":\"white\"}} onClick= {()=>{goToDetails()}} >View details</button>\n            </div>\n          </div>\n         \n          <div className=\"col-md-5\">\n          <img src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`}  className=\"card-img-top\" alt=\"...\"></img>\n          </div>\n          \n        </div>\n      </div>\n \n \n    )\n\n}\n\nexport default Movie;","import React, { useEffect, useState } from 'react';\nimport config from '../../../config.js';\nimport Movie from '../Movie/Movie';\n\nconst MovieList = () => {\n\n    const [movies, setMovies] = useState([]);\n    \n    const api_key = config[process.env.NODE_ENV].api_key;\n    \n\n\n    useEffect(() => {\n\n        const fetchMovies = async () => {\n\n            const response = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${api_key}`);\n            const page = await response.json();\n            \n            \n            function predicateBy(prop){\n                return function(a,b){\n                   if (a[prop] > b[prop]){\n                       return 1;\n                   } else if(a[prop] < b[prop]){\n                       return -1;\n                   }\n                   return 0;\n                }\n             }\n\n            const movies = page.results.sort(predicateBy(\"title\"));\n            \n        \n\n\n            setMovies(movies);\n\n\n        }\n\n       \n     \n\n        fetchMovies();\n      \n\n    }, [])\n\n    return (\n            \n        \n           \n            \n            \n            movies.map((movie, i) => {\n\n                \n                      return(\n                            <div>\n                            <br></br>\n                             <Movie movie={movie}  key={i} id={i} />\n                             <br></br>\n                            </div>\n                                \n                          \n                          )\n                    }\n                    \n                )\n                \n               \n    );\n\n}\n\nexport default MovieList;","import React, { useEffect, useState } from 'react';\nimport MovieList from '../Movies/MovieList/MovieList';\nimport config  from '../../config';\n\n\n\nconst Home = ({loadUser,isSignedIn})=>{\n\n    \n    const api_key= config[process.env.NODE_ENV].api_key;\n    const [user,setUser]=useState([]);\n    const [sessionId,setSessionId]=useState(localStorage.getItem('session_id'))\n\n\n    \n\n    useEffect(()=>{\n        \n        \n        const fetchUser = async ()=>{\n\n        \n            const response = await fetch('https://api.themoviedb.org/3/account?api_key='+api_key+\"&session_id=\"+sessionId);\n    \n            const result = await response.json();\n            \n            \n            \n            if(!isSignedIn){\n                loadUser(result);\n            }\n            \n    \n          \n            \n    \n            \n    \n        }\n\n        fetchUser();\n        \n     \n\n       \n\n    },[])\n\n\n\n\n    return (\n    <div>\n        <MovieList user={user}></MovieList>\n    </div>\n        \n    );\n\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport config from '../../../config';\nimport ReactStars from 'react-rating-stars-component'\nimport \"./MoviesDetails.css\"\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst MovieDetails = ({ id, user }) => {\n\n\n\n\n    const [movie, setMovie] = useState('');\n    const [idx, setIdx] = useState(Number(id));\n    const [genres, setGenres] = useState([]);\n   \n    const [rating, setRating] = useState(0);\n\n    \n\n\n    const api_key = config[process.env.NODE_ENV].api_key;\n\n\n    const history = useHistory();\n\n    const getBacktoMovies = () => {\n        history.push('/Home')\n    }\n\n    useEffect(() => {\n\n        const getData = async function () {\n\n            const session_id = localStorage.getItem('session_id')\n\n            const urls = [\n                `https://api.themoviedb.org/3/account/${user.id}/rated/movies?api_key=${api_key}&session_id=${session_id}&language=en-US&sort_by=created_at.asc&page=1`,\n                `https://api.themoviedb.org/3/movie/ ${idx.toString()}?api_key=${api_key}&language=en-US`\n            ]\n\n\n            const [page, movie] = await Promise.all(urls.map(async function (url) {\n                const response = await fetch(url)\n                return response.json();\n\n            }));\n\n            let ratedMovies = page.results;\n            \n\n            ratedMovies.forEach((movie) => {\n\n                if (idx === movie.id) {\n                    console.log(movie.rating);\n                    setRating(movie.rating);\n                }\n    \n    \n            })\n\n\n            setMovie(movie)\n            setGenres(movie.genres);\n\n\n\n\n\n        }\n\n        getData();\n\n    }, [])\n\n\n   \n\n\n\n    const rateMovie = async (newRating) => {\n        const session_id = localStorage.getItem('session_id')\n\n\n        await fetch(`https://api.themoviedb.org/3/movie/${idx}/rating?api_key=${api_key}&session_id=${session_id}`, {\n\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            },\n\n            body: JSON.stringify({\n                value: (newRating)\n            })\n        }).catch((err) => { console.log(err) })\n\n\n\n    }\n\n\n\n\n\n    return (\n\n\n        <div>\n            <br></br>\n            <br></br>\n\n\n            <div className=\"card\" style={{ \"width\": \"18 rem\" }}>\n                <img src={\"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" + movie.poster_path} className=\"card-img-top\" alt=\"...\"></img>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{movie.title}</h5>\n                    <p className=\"card-text\">{movie.overview}.</p>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"><b>Release Date: </b>{new Date(movie.release_date).getFullYear()}</li>\n                    <li className=\"list-group-item\"><b>Average Vote: </b>{movie.vote_average}</li>\n                    <li className=\"list-group-item\">\n                        <b>Rate Now</b>\n\n\n                        <ReactStars\n                            id=\"stars\"\n                            count={10}\n                            value={rating}\n                            onChange={rateMovie}\n                            size={24}\n                            isHalf={true}\n                            emptyIcon={<i className=\"far fa-star\"></i>}\n                            halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                            fullIcon={<i className=\"fa fa-star\"></i>}\n                            activeColor=\"#ffd700\"\n                        />\n\n                    </li>\n\n                </ul>\n\n                <div className=\"card-body\">\n                    <b>Genres:</b>\n                    <ul>\n                        {genres.map((genre, i) => {\n                            return (<li key={i}>{genre.name}</li>)\n                        })}\n\n\n                    </ul>\n\n\n\n                </div>\n\n                <ul className=\"list-group list-group-flush\">\n\n                    <li className=\"list-group-item\"><button className=\"btn btn-danger\" style={{ \"color\": \"white\" }} onClick={() => { getBacktoMovies() }}>Get back</button></li>\n                </ul>\n\n\n            </div>\n        </div>\n\n\n    );\n\n};\n\nexport default MovieDetails;","//IMPORTANT: THIS COMPONENT WORKS WELL WITH BOOTSTAP 4\n\n\nimport { Link, useHistory} from \"react-router-dom\";\nconst NavBar = ({username,onSignOut}) => {\n\n  const history = useHistory();\n    \n    return (\n        <header className=\"header\">\n        \n        <div className=\"container-fluid\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\n        \n        <Link to=\"/Home\" className=\"navbar-brand\">Movies.Inc</Link>\n       \n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n        <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        \n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n\n        <ul className=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n                \n                <Link to=\"/Home\" className=\"nav-link\">Home</Link>\n            </li>\n           \n        </ul>\n\n        <ul className=\"navbar-nav\">\n        <li className=\"nav-item\"><a class=\"nav-link\" href=\"#\">{username}</a></li>\n        \n        <li className=\"nav-item\"> <button type=\"button\" id=\"signout\" className=\"btn btn-danger\" onClick={()=>{\n            \n            history.push(\"/\")\n            onSignOut();\n        \n        }}>Sign out</button></li>\n        </ul>\n\n\n        </div>\n\n    \n       \n       \n      </nav>\n      </div>\n        </header>\n       \n      \n    );\n}\n\n\nexport default NavBar;","import React,{useState} from \"react\";\n\n\nimport { BrowserRouter as Router, Route, Switch,useHistory} from \"react-router-dom\";\nimport Session from './components/Session/Session';\nimport Auth from \"./components/Auth/Auth\";\nimport Home from './components/Home/Home';\nimport MovieDetails from \"./components/Movies/MovieDetails/MoviesDetails\";\nimport NavBar from \"./components/NavBar/NavBar\";\n\n\n\n  const  App = ()=>{\n\n    const [user,setUser]= useState([]);\n    const [isSignedIn,setSignedIn]=useState(false);\n    \n\n    const loadUser= (user)=>{\n      \n      \n      if(!isSignedIn){\n        setSignedIn(true);\n        setUser(user);\n        \n      }\n\n      \n    }\n\n    const onSignOut = ()=>{\n      setUser([]);\n      setSignedIn=false;\n    }\n\n   \n    \n\n  return (\n   <Router>\n   <NavBar username={user.username} onSignOut={onSignOut}></NavBar>\n     <Switch>\n       <Route path='/Session'  component={()=><Session/>}></Route>\n       <Route path='/Auth' exact component={Auth}></Route>\n       <Route path='/' exact component={Auth}></Route>\n       <Route path='/Home'  component={()=><Home loadUser={loadUser} isSignedIn={isSignedIn} ></Home>}></Route>\n       <Route path='/Movies/:id'  \n              render={({match})=><MovieDetails id={match.params.id} user={user}/>}\n\n              /> \n\n     </Switch>\n   </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}